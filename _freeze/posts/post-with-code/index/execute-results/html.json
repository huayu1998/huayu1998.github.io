{
  "hash": "bf95470293b9ac2abd3b7b240265ad10",
  "result": {
    "markdown": "---\ntitle: \"Post With Code\"\nauthor: \"Huayu Liang\"\ndate: \"now\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n\nHere is some sample R code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\nBut we also want to run Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfor i in range(9):\n  print(i)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0\n1\n2\n3\n4\n5\n6\n7\n8\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nx = 5\n```\n:::\n\n\nThe plot below is from the [Seaborn Python library documentation](https://seaborn.pydata.org/examples/horizontal_boxplot.html)\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_theme(style=\"ticks\")\n# Initialize the figure with a logarithmic x axis\nf, ax = plt.subplots(figsize=(7, 6))\nax.set_xscale(\"log\")\n# Load the example planets dataset\nplanets = sns.load_dataset(\"planets\")\n# Plot the orbital period with horizontal boxes\nsns.boxplot(\n    planets, x=\"distance\", y=\"method\", hue=\"method\",\n    whis=[0, 100], width=.6, palette=\"vlag\"\n)\n# Add in points to show each observation\nsns.stripplot(planets, x=\"distance\", y=\"method\", size=4, color=\".3\")\n# Tweak the visual presentation\nax.xaxis.grid(True)\nax.set(ylabel=\"\")\nsns.despine(trim=True, left=True)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe plot below is from the [Yellowbrick Python library documentation](https://www.scikit-yb.org/en/latest/api/features/jointplot.html?highlight=joint%20plot#joint-plot-visualization):\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\nfrom yellowbrick.datasets import load_concrete\nfrom yellowbrick.features import JointPlotVisualizer\n\n# Load the dataset\nX, y = load_concrete()\n\n# Instantiate the visualizer\nvisualizer = JointPlotVisualizer(columns=\"cement\")\n\nvisualizer.fit_transform(X, y)        # Fit and transform the data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      cement   slag    ash  water  splast  coarse   fine  age\n0      540.0    0.0    0.0  162.0     2.5  1040.0  676.0   28\n1      540.0    0.0    0.0  162.0     2.5  1055.0  676.0   28\n2      332.5  142.5    0.0  228.0     0.0   932.0  594.0  270\n3      332.5  142.5    0.0  228.0     0.0   932.0  594.0  365\n4      198.6  132.4    0.0  192.0     0.0   978.4  825.5  360\n...      ...    ...    ...    ...     ...     ...    ...  ...\n1025   276.4  116.0   90.3  179.6     8.9   870.1  768.3   28\n1026   322.2    0.0  115.6  196.0    10.4   817.9  813.4   28\n1027   148.5  139.4  108.6  192.7     6.1   892.4  780.0   28\n1028   159.1  186.7    0.0  175.6    11.3   989.6  788.9   28\n1029   260.9  100.5   78.3  200.6     8.6   864.5  761.5   28\n\n[1030 rows x 8 columns]\n```\n:::\n\n```{.python .cell-code}\nvisualizer.show()                     # Finalize and render the figure\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-3.png){width=768}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}