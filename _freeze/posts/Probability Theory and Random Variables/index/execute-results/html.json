{
  "hash": "8f5cc1f6ce7dcdd10b4dec80ff288cc6",
  "result": {
    "markdown": "---\ntitle: \"Probability Theory and Random Variables\"\nauthor: \"Huayu Liang\"\ndate: \"now\"\ncategories: [ML, visualization, probability theory]\nimage: \"probability.png\"\n---\n\nImage from the source: [Analytics Yogi: Maximum Likelihood Estimation: Concepts, Examples](https://vitalflux.com/maximum-likelihood-estimation-concepts-examples/)\n\n# Exploring Probability Theory and Random Variables with Python\n\n## Probability Theory\n\nProbability theory is the branch of mathematics that deals with uncertainty and randomness. In machine learning, it is crucial for making decisions based on uncertain or incomplete information. Let's dive into some key concepts.\n\n### **Coin Toss Simulation**\n\nAs a simple example, let's simulate a coin toss experiment using Python. We'll use the **`random`** module to model the randomness of the outcome.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport random\n\n# Simulate a coin toss\noutcomes = ['Heads', 'Tails']\nresult = random.choice(outcomes)\nprint(f\"The coin landed on: {result}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe coin landed on: Heads\n```\n:::\n:::\n\n\n### **Visualizing a Coin Toss**\n\nTo visualize the outcome of the coin toss experiment, we can create a bar chart that shows the probabilities of getting 'Heads' and 'Tails' over multiple trials.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\n# Simulate multiple coin tosses\ntrials = 10000\ntosses = [random.choice(outcomes) for _ in range(trials)]\n\n# Count the occurrences of 'Heads' and 'Tails'\nhead_count = tosses.count('Heads')\ntail_count = tosses.count('Tails')\n\n# Create a bar chart\nplt.bar(outcomes, [head_count, tail_count])\nplt.xlabel('Outcome')\nplt.ylabel('Frequency')\nplt.title(f'Coin Toss Simulation ({trials} Trials)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=601 height=449}\n:::\n:::\n\n\nThis bar chart visualizes the frequencies of 'Heads' and 'Tails' outcomes over 10000 coin toss trials.\n\n## Random Variables\n\nIn probability theory, a random variable is a variable whose values depend on the outcome of a random experiment. Let's explore a discrete random variable.\n\n### **Dice Roll Simulation**\n\nWe'll simulate the roll of a fair six-sided die and visualize the probability distribution of its outcomes.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Simulate a dice roll\ndie_faces = [1, 2, 3, 4, 5, 6]\nresult = random.choice(die_faces)\nprint(f\"The die shows: {result}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe die shows: 2\n```\n:::\n:::\n\n\n### **Visualizing a Dice Roll**\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Simulate multiple dice rolls\nrolls = [random.choice(die_faces) for _ in range(trials)]\n\n# Count the occurrences of each face\nface_counts = [rolls.count(face) for face in die_faces]\n\n# Create a bar chart\nplt.bar(die_faces, face_counts)\nplt.xlabel('Die Face')\nplt.ylabel('Frequency')\nplt.title(f'Dice Roll Simulation ({trials} Rolls)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=602 height=449}\n:::\n:::\n\n\nThis bar chart shows the probability distribution of a fair six-sided die's outcomes over 1000 rolls.\n\n## Conclusion\n\nProbability theory and random variables are foundational concepts in machine learning that help us deal with uncertainty and randomness. In this blog post, we explored these concepts through simple simulations of coin tosses and dice rolls in Python. Visualizations played a crucial role in understanding the probability distributions of these experiments.\n\nUnderstanding probability theory and random variables is essential for various machine learning algorithms, such as Bayesian networks, decision trees, and more. Experiment with different simulations and visualizations to deepen your grasp of these concepts.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}